# init
completions=(
  git
  composer
  ssh
)
aliases=(
  general
)
plugins=(
  git
  bashmarks
)

# brew
alias arm="exec arch -arch arm64e /bin/zsh --login"
alias x64="exec arch -arch x86_64 /bin/zsh --login"


# {{{PATH
export PATH="/bin:/usr/bin:/usr/local/bin:${PATH}"
export PATH=$PATH:/opt/homebrew/bin
export PATH=$PATH:/usr/sbin/
export PATH=/opt/homebrew/opt/make/libexec/gnubin:$PATH
export PATH=$HOME/miniforge3/bin:$PATH
export PATH=$HOME/.cargo/bin:$PATH
export PATH=$HOME/.nodebrew/current/bin:$PATH
export NODEBREW_ROOT=/opt/homebrew/var/nodebrew
# }}}

# {{{alias
alias bash="/opt/homebrew/bin/bash"
alias ..='cd ..'
alias intel="arch -x86_64" # intel brew "command"
alias rm="trash"
alias __gp=gp_set
alias __yokoenv="conda activate yokoenv"
alias __line="/Users/br171440/workspace/yokoscripts/shell_line.sh"
alias __pokemon='/Users/br171440/.pokemon-icat/pokemon-icat.sh "-g 5"'
alias bashrc="source ~/.bashrc"

## yokoscripts
yokoscripts="/Users/br171440/workspace/yokoscripts"
alias __qr="/opt/homebrew/bin/bash ${yokoscripts}/qr_make.sh"
alias __sp="source ${yokoscripts}/simple_proxy.sh set"
alias __usp="source ${yokoscripts}/simple_proxy.sh unset"
alias __tensor="source /Users/br171440/tensorflow_macos_venv/bin/activate"
alias __weather="/opt/homebrew/bin/bash ${yokoscripts}/nago_weather.sh"

## lsの代わりにexaを使う
if [[ $(command -v exa) ]]; then
  alias e='exa --icons --git'
  alias l=e
  alias ls=e
  alias ea='exa -a --icons --git'
  alias la=ea
  alias ee='exa -aahl --icons --git'
  alias ll=ee
  alias et='exa -T -L 3 -a -I "node_modules|.git|.cache" --icons'
  alias lt=et
  alias eta='exa -T -a -I "node_modules|.git|.cache" --color=always --icons | less -r'
  alias lta=eta
  alias l='clear && ls'
fi

## catの代わりにbat
alias cat='bat'
export BAT_THEME="Visual Studio Dark+"
alias CAT='/bin/cat'
alias LS='/bin/ls'
## Kitty
alias kk="kitty +kitten"
alias ssh="kk ssh"

# }}}

eval "$(pyenv init -)"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi


# Starship
eval "$(starship init bash)"


# BEGIN_KITTY_SHELL_INTEGRATION
if test -n "$KITTY_INSTALLATION_DIR" -a -e "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; then source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; fi
# END_KITTY_SHELL_INTEGRATION

. "$HOME/.cargo/env"
